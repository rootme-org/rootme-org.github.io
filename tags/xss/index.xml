<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>xss - Tag - Root-Me Blog</title>
        <link>https://blog.root-me.org/tags/xss/</link>
        <description>xss - Tag - Root-Me Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>contact@root-me.org (Root-Me)</managingEditor>
            <webMaster>contact@root-me.org (Root-Me)</webMaster><lastBuildDate>Tue, 21 Feb 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.root-me.org/tags/xss/" rel="self" type="application/rss+xml" /><item>
    <title>Documentation - DOM-Based XSS</title>
    <link>https://blog.root-me.org/posts/dom_based_xss/</link>
    <pubDate>Tue, 21 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Ruulian, Podalirius</author>
    <guid>https://blog.root-me.org/posts/dom_based_xss/</guid>
    <description><![CDATA[Cross Site Scripting, or XSS, is the most present vulnerability on the web, by far. It is referred to by many names, among which &ldquo;Golden Book vulnerability&rdquo;, simply because these have allowed a generalization of these vulnerabilities. The XSS flaw is characterized by a possible injection of arbitrary code into the HTML code that will be rendered to the browser. In other words, the attacker will be able to modify an aspect of the site or to inject scripts in what the victim will then see on the screen.]]></description>
</item>
<item>
    <title>Documentation - Reflected XSS</title>
    <link>https://blog.root-me.org/posts/reflected_xss/</link>
    <pubDate>Tue, 21 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Ruulian, Podalirius</author>
    <guid>https://blog.root-me.org/posts/reflected_xss/</guid>
    <description><![CDATA[Cross Site Scripting, or XSS, is the most present vulnerability on the web, by far. It is referred to by many names, among which &ldquo;Golden Book vulnerability&rdquo;, simply because these have allowed a generalization of these vulnerabilities. The XSS flaw is characterized by a possible injection of arbitrary code into the HTML code that will be rendered to the browser. In other words, the attacker will be able to modify an aspect of the site or to inject scripts in what the victim will then see on the screen.]]></description>
</item>
<item>
    <title>Documentation - Stored XSS</title>
    <link>https://blog.root-me.org/posts/stored_xss/</link>
    <pubDate>Tue, 21 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Ruulian, Podalirius</author>
    <guid>https://blog.root-me.org/posts/stored_xss/</guid>
    <description><![CDATA[Prerequisites To understand the whole article, you will need:
 Know HTML Know the basics of PHP and Javascript Know what an XSS is  DÃ©finition A stored XSS is possible when the user input is stored in a database and displayed on the page. An example is a forum page.
Explanation of the vulnerability Let&rsquo;s take as an example a forum page that displays the posted messages.
Here is the part of the PHP code that displays the messages:]]></description>
</item>
</channel>
</rss>
